En general, cuando se envía algo a través de sockets se envía como «texto plano», es decir, no sabemos si hay alguien usando un sniffer en la red y por tanto no sabemos si alguien está capturando los datos.
En general, cualquier sistema que pretenda ser seguro necesitará usar cifrado. Para enviar mensajes cifrados se necesita algún mecanismo o algoritmo para convertir un texto normal en uno más difícil de comprender.
Empezaremos dando una lista de buenas prácticas que nos ayuden a escribir código seguro en nuestros programas. A continuación, se presentarán algunas de las técnicas más importantes para asegurar sistemas y aplicaciones: la criptografía, los certificados digitales y el control de acceso.
Después se estudiarán los ficheros de políticas de seguridad en Java. Y aprenderemos a usar diferentes librerías de Java para implementar la seguridad: librerías criptográﬁcas (JCA y J CE), la extensión de sockets seguros (JSSE) y el servicio de autenticación y autorización de Java (JAAS).
